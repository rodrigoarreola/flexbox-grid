@import "reset";

/*
grid-template-columns: define the number of columns in the grid
grid-template-rows: define the number of rows in the grid
grid-template-area: name the areas of the grid
*/

//Colors
$red: #ef3e36;
$blue: #00aeef;
$green: #17bebb;
$white: #fffbff;
$black: #2e282a;
$base: #f7f7f7;
$dark: #000;

.history{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(13, minmax(1rem, 4rem));
    grid-auto-flow: row dense;
    grid-gap: 1vw;
    max-width: 1200px;
    margin: auto;

    &__item{
        background-color: $blue;
        border: medium solid $black;
        color: $white;
        padding: 2rem;
        font-size: 2em;
        display: flex;
        align-items: center;
        justify-content: center;

        /*
        
        => This is useless

        &:nth-of-type(1){
            grid-row: span 1;
            grid-column: span 1;
        }
        &:nth-of-type(2){
            grid-row: span 1;
            grid-column: span 2;
        }
        &:nth-of-type(3){
            grid-row: span 2;
            grid-column: span 2;
        }
        &:nth-of-type(4){
            grid-row: span 1;
            grid-column: span 3;
        }
        &:nth-of-type(5), &:nth-of-type(6), &:nth-of-type(7){
            grid-row: span 1;
            grid-column: span 1;
        }
        &:nth-of-type(8){
            grid-row: span 1;
            grid-column: span 2;
        }
        &:nth-of-type(9){
            grid-row: span 2;
            grid-column: span 1;
        }
        &:nth-of-type(10){
            grid-row: span 2;
            grid-column: span 2;
        }
        &:nth-of-type(11){
            grid-row: span 2;
            grid-column: span 2;
        }
        &:nth-of-type(12){
            grid-row: span 2;
            grid-column: span 2;
        }
        &:nth-of-type(13), &:nth-last-of-type(14), &:nth-last-of-type(15){
            grid-row: span 1;
            grid-column: span 3;
        }
        &:nth-of-type(16){
            grid-row: span 2;
            grid-column: span 1;
        }
        &:nth-of-type(17){
            grid-row: span 2;
            grid-column: span 2;
        }
        &:nth-of-type(18){
            grid-row: span 1;
            grid-column: span 1;
        }
        &:nth-of-type(19){
            grid-row: span 1;
            grid-column: span 2;
        }
        &:nth-of-type(20){
            grid-row: span 2;
            grid-column: span 1;
        }
        &:nth-of-type(21){
            grid-row: span 2;
            grid-column: span 2;
        }
        &:nth-of-type(22){
            grid-row: span 1;
            grid-column: span 2;
        }
        &:nth-of-type(23){
            grid-row: span 1;
            grid-column: span 1;
        }
        */
    }

            /*
        DRY - Row x Columns
        1x1
        1x2
        1x3
        2x1
        2x2
        */

        .r1c1{
            grid-row: span 1;
            grid-column: span 1;
        }

        .r1c2{
            grid-row: span 1;
            grid-column: span 2;
        }

        .r1c3{
            grid-row: span 1;
            grid-column: span 3;
        }

        .r2c1{
            grid-row: span 2;
            grid-column: span 1;
        }

        .r2c2{
            grid-row: span 2;
            grid-column: span 2;
        }
}